[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rodrigo.d.baraglia\AppData\Local\Temp\idea8.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rodrigo.d.baraglia\AppData\Local\Temp\idea8.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 121.1169ms
[debug]       Load.loadUnit: defsScala took 0.7006ms
[debug] [Loading] Scanning directory C:\Users\rodrigo.d.baraglia\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.2269 ms
[debug]           Load.resolveProject(global-plugins) took 52.8034ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rodrigo.d.baraglia\.sbt\1.0\plugins, plugins: List(<none>))) took 101.1057ms
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 128.753ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2874ms
[debug]     Load.loadUnit(file:/C:/Users/rodrigo.d.baraglia/.sbt/1.0/plugins/, ...) took 263.6735ms
[debug]   Load.apply: load took 480.6037ms
[debug]   Load.apply: resolveProjects took 7.5807ms
[debug]   Load.apply: finalTransforms took 78.3062ms
[debug]   Load.apply: config.delegates took 9.9824ms
[debug]   Load.apply: Def.make(settings)... took 2285.8872ms
[debug]   Load.apply: structureIndex took 85.2974ms
[debug]   Load.apply: mkStreams took 1.3102ms
[info] loading global plugins from C:\Users\rodrigo.d.baraglia\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4872.6393ms
[debug]           Load.loadUnit: plugins took 42.1057ms
[debug]           Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl\project
[debug]             Load.loadUnit: mkEval took 6.1864ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1498 ms
[info] loading settings for project myrepl-build from idea8.sbt ...
[debug]               Load.resolveProject(myrepl-build) took 5.25ms
[debug]             Load.loadTransitive: finalizeProject(Project(id myrepl-build, base: C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl\project, plugins: List(<none>))) took 8.0391ms
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl\project, returning: (myrepl-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 148.1157ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.7926ms
[debug]         Load.loadUnit(file:/C:/Users/rodrigo.d.baraglia/Documents/scalastuff/myrepl/project/, ...) took 198.0166ms
[debug]       Load.apply: load took 200.0829ms
[debug]       Load.apply: resolveProjects took 0.1528ms
[debug]       Load.apply: finalTransforms took 12.3185ms
[debug]       Load.apply: config.delegates took 0.4719ms
[debug]       Load.apply: Def.make(settings)... took 86.6112ms
[debug]       Load.apply: structureIndex took 27.1117ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 645.1349ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl
[debug]       Load.loadUnit: mkEval took 0.23ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9275 ms
[info] loading settings for project myrepl from build.sbt ...
[debug]         Load.resolveProject(myrepl) took 25.559ms
[debug]       Load.loadTransitive: finalizeProject(Project(id myrepl, base: C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl, plugins: List(<none>))) took 28.5541ms
[debug] [Loading] Done in C:\Users\rodrigo.d.baraglia\Documents\scalastuff\myrepl, returning: (myrepl)
[debug]     Load.loadUnit: loadedProjectsRaw took 88.9464ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.847ms
[debug]   Load.loadUnit(file:/C:/Users/rodrigo.d.baraglia/Documents/scalastuff/myrepl/, ...) took 747.8413ms
[debug] Load.apply: load took 749.5511ms
[debug] Load.apply: resolveProjects took 0.1529ms
[debug] Load.apply: finalTransforms took 22.1244ms
[debug] Load.apply: config.delegates took 0.3235ms
[debug] Load.apply: Def.make(settings)... took 71.0189ms
[debug] Load.apply: structureIndex took 28.5986ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to myrepl (in build file:/C:/Users/rodrigo.d.baraglia/Documents/scalastuff/myrepl/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60212 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60212, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to myrepl (in build file:/C:/Users/rodrigo.d.baraglia/Documents/scalastuff/myrepl/)
[debug] > Exec(idea-shell, None, None)
